extends layout

block heading
  script(type='text/javascript', src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDX4Fw2VFDqPU46MERB-3Z5IXTaaXWhF1Y&sensor=false")
  script(type='text/javascript')
    var map;
    function initialize() {
      var mapOptions = {
        center: new google.maps.LatLng(39.8282, -98.5795),
        zoom: 4,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map(document.getElementById("map_canvas"),
          mapOptions);
    }

    function makeMarker(c0, c1, size, color, tweets) {
      var latLng = new google.maps.LatLng(parseFloat(c0), parseFloat(c1));
      var marker = new google.maps.Marker({
        position: latLng,
        map: map,
        icon: getCircle(size, color)
      });
      onClick(marker, tweets);
    }

    function getCircle(size, color) {
      return {
        path: google.maps.SymbolPath.CIRCLE,
        fillColor: color,
        fillOpacity: .5,
        scale: size/8,
        strokeColor: 'white',
        strokeWeight: .5
      };
    }

    function onClick(marker, tweets) {
      var message = tweets;
      var infowindow = new google.maps.InfoWindow(
          { content: message,
            size: new google.maps.Size(50,50)
          });
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map,marker);
      });
    }

block content
  .container
    h1 Map
    #map_canvas(style='width:800px; height:500px;')
    h1= "map info"
    div(id="container2")
      each tweet_properties, location in tweets
        div(id="wrapper")
          p Location: #{location}
          //- each location has tweets, number tweets, sentiments, and average sentiment
          p Number of tweets: #{tweet_properties[2]}
          p Average sentiment: #{tweet_properties[3]}
          p Tweets: #{tweet_properties[0]}
          p Sentiments: #{tweet_properties[1]}

  script(type='text/javascript')
    initialize();
  each info, loc in tweets
    script(type='text/javascript')
      makeMarker(parseFloat('#{info[4][0]}'), parseFloat('#{info[4][1]}'), parseFloat('#{info[2]}'), 'rgb(20,128,173)', 'surprise');

