extends layout

block heading
  script(type='text/javascript', src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDX4Fw2VFDqPU46MERB-3Z5IXTaaXWhF1Y&sensor=false")
  script(src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js")
  script(type='text/javascript')
    var map;
    function initialize() {
      var mapOptions = {
        center: new google.maps.LatLng(39.8282, -98.5795),
        zoom: 4,
        scrollwheel: false,
        disableDefaultUI: true,
        draggable: false,
        keyboardShortcuts: false,
        disableDoubleClickZoom: true,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      map = new google.maps.Map(document.getElementById("map_canvas"),
          mapOptions);

      var legend = document.getElementById('legend');
      content = '<h4>Sentiment Legend</h4>';
      content += '<p><div class="color yellow"></div>Positive</p>';
      content += '<p><div class="color gray"></div>Neutral</p>';
      content += '<p><div class="color blue"></div>Negative</p>';
      legend.innerHTML = content;
      map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(legend);

      var keyword = document.getElementById('keyword');
      map.controls[google.maps.ControlPosition.TOP_CENTER].push(keyword);
    }

    function makeMarker(c0, c1, size, color) {
      c0 = parseFloat(c0);
      c1 = parseFloat(c1);
      var latLng = new google.maps.LatLng(c0, c1);
      var marker = new google.maps.Marker({
        position: latLng,
        map: map,
        icon: makeCircle(parseInt(size), color)
      });
      onClick(marker, c0, c1);
    }

    function makeCircle(size, color) {
      return {
        path: google.maps.SymbolPath.CIRCLE,
        fillColor: color,
        fillOpacity: .7,
        scale: Math.log(size+1)*5,
        strokeColor: 'white',
        strokeWeight: .5
      };
    }

    function onClick(marker, c0, c1) {
      var nums = ('' + c0 + c1).replace(/\D+/g,'');
      google.maps.event.addListener(marker, 'click', function() {
        if ($('#t'+nums).is(':visible')) {
          $('.tweets').hide();
          $('#default').show()
        } else {
          $('.tweets').hide();
          $('#t'+nums).show();
        }
      });
    }

block content
  .container-fluid(style='height:100%')
    .row-fluid(style='height:100%')
      .span9(style='height:100%')
        #map_canvas(style='width:95%; height:85%;')
        #legend(style='background-color:rgba(255, 255, 255, 0.5); padding: 10px;')
        #keyword(style='background-color:rgba(255, 255, 255, 0.5); padding: 10px; width:100%;')
          center
            h1 Tweets about #{keyword}
      .span3#sidebar(style='height:100%;')
        -var i = 0;
        .tweets#default(style='height:100%')
          h3 Please click a city on the map to see details
        each tweet_properties, location in tweets
          .tweets(id='t'+location.replace(/\D+/g,''), style='height:100%')
            -i++;
            .cityInfo(style='display:block;')
              h3 #{tweet_properties[4]}
              h4 #{tweet_properties[2]} recent tweets
              h4 Average sentiment: #{tweet_properties[3]}
              br
              h4 Tweets:
            .tweetContent(style='display:block; height:55%; overflow-y:scroll')
              each tweet in tweet_properties[0]
                .tweet(style='margin-bottom:8pt;') #{tweet}

  script(type='text/javascript')
    initialize();

    function urlify(text) {
      var urlRegex = /(https?:\/\/[^\s]+)/g;
      return text.replace(urlRegex, function(url) {
          return '<a href="' + url + '" target="_blank">' + url + '</a>';
      })
    }

    $('.tweet').each(function() {
      this.innerHTML = urlify(this.innerHTML);
    });
  each info, loc in tweets
    script(type='text/javascript')
      var nums = '#{loc}'.replace(/\D+/g,'');
      var locs = '#{loc}'.split(',');
      $('#t' + nums).hide();
      var avg_sent = #{info[3]};

      //- variables used for yellow-blue color scheme
      var rg = Math.round(avg_sent/4*255);
      var blue = Math.round((avg_sent-4)/-4*255);

      //- variables used for red-black color scheme
      var red = Math.round(avg_sent/4*255);
      if (avg_sent <= 2)
        var bg = Math.round(avg_sent/2*64);
      else
        var bg = Math.round((avg_sent-4)/-2*64);

      makeMarker(locs[0], locs[1], '#{info[2]}', 'rgb('+rg+','+rg+','+blue+')');
